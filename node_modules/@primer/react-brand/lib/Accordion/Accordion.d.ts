import React from 'react';
import type { BaseProps } from '../component-helpers';
/**
 * Design tokens
 */
import '@primer/brand-primitives/lib/design-tokens/css/tokens/functional/components/accordion/colors-with-modes.css';
export type AccordionRootProps = BaseProps<HTMLDetailsElement> & {
    open?: boolean;
    children: React.ReactElement<AccordionHeadingProps | AccordionContentProps>[];
    variant?: 'default' | 'emphasis';
    ref?: React.RefObject<HTMLDetailsElement>;
} & React.HTMLAttributes<HTMLDetailsElement>;
export declare const AccordionRoot: React.ForwardRefExoticComponent<Omit<AccordionRootProps, "ref"> & React.RefAttributes<HTMLDetailsElement>>;
type AccordionHeadingProps = BaseProps<HTMLHeadingElement> & {
    className?: string;
    children: string;
    as?: 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
    reversedToggles?: boolean;
    variant?: 'default' | 'emphasis';
    open?: boolean;
    handleOpen?: (boolean: any) => void;
    parentRef?: React.RefObject<HTMLDetailsElement>;
};
export declare const AccordionHeading: React.ForwardRefExoticComponent<Omit<AccordionHeadingProps, "ref"> & React.RefAttributes<HTMLHeadingElement>>;
type AccordionContentProps = BaseProps<HTMLElement> & {
    children: React.ReactElement | React.ReactElement[];
    open?: boolean;
    handleOpen?: (boolean: any) => void;
    parentRef?: React.RefObject<HTMLDetailsElement>;
};
export declare function AccordionContent({ children, className, open, handleOpen, parentRef, ...rest }: AccordionContentProps): JSX.Element;
/**
 * Branded Accordion component
 */
export declare const Accordion: React.ForwardRefExoticComponent<Omit<AccordionRootProps, "ref"> & React.RefAttributes<HTMLDetailsElement>> & {
    Content: typeof AccordionContent;
    Heading: React.ForwardRefExoticComponent<Omit<AccordionHeadingProps, "ref"> & React.RefAttributes<HTMLHeadingElement>>;
};
export {};
