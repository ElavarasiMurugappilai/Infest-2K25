import React from 'react';
import type { BaseProps } from '../component-helpers';
export declare const HeadingSizes: readonly ["display", "1", "2", "3", "4", "5", "6", "subhead-large", "subhead-medium"];
export declare const HeadingTags: readonly ["h1", "h2", "h3", "h4", "h5", "h6"];
export declare const HeadingWeights: readonly ["heavy", "extrabold", "bold", "semibold", "medium", "normal", "light", "extralight"];
export declare const HeadingStretch: readonly ["condensed", "normal", "expanded"];
export declare const HeadingLetterSpacing: readonly ["condensed", "normal", "none"];
export declare const HeadingFontVariants: readonly ["mona-sans", "hubot-sans"];
export declare const defaultHeadingTag: "h2";
export declare const defaultHeadingFont: "mona-sans";
type HeadingWeightVariants = (typeof HeadingWeights)[number];
type HeadingStretchVariants = (typeof HeadingStretch)[number];
type HeadingLetterSpacingVariants = (typeof HeadingLetterSpacing)[number];
type HeadingFontVariants = (typeof HeadingFontVariants)[number];
type ResponsiveStretchMap = {
    narrow?: HeadingStretchVariants;
    regular?: HeadingStretchVariants;
    wide?: HeadingStretchVariants;
};
type ResponsiveLetterSpacingMap = {
    narrow?: HeadingLetterSpacingVariants;
    regular?: HeadingLetterSpacingVariants;
    wide?: HeadingLetterSpacingVariants;
};
type ResponsiveWeightMap = {
    narrow?: HeadingWeightVariants;
    regular?: HeadingWeightVariants;
    wide?: HeadingWeightVariants;
};
export declare const classMap: {
    h1: "1";
    h2: "2";
    h3: "3";
    h4: "4";
    h5: "5";
    h6: "6";
};
export type HeadingProps = {
    as?: (typeof HeadingTags)[number];
    size?: (typeof HeadingSizes)[number];
    weight?: HeadingWeightVariants | ResponsiveWeightMap;
    stretch?: HeadingStretchVariants | ResponsiveStretchMap;
    letterSpacing?: HeadingLetterSpacingVariants | ResponsiveLetterSpacingMap;
    font?: HeadingFontVariants;
} & React.HTMLAttributes<HTMLHeadingElement> & BaseProps<HTMLHeadingElement>;
export declare const Heading: React.ForwardRefExoticComponent<Omit<HeadingProps, "ref"> & React.RefAttributes<HTMLHeadingElement>>;
export {};
