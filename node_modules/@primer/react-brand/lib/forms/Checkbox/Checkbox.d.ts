import React, { InputHTMLAttributes } from 'react';
import type { BaseProps } from '../../component-helpers';
import type { FormValidationStatus } from '../form-types';
export type CheckboxProps = {
    /**
     * Apply indeterminate visual appearance to the checkbox
     */
    indeterminate?: boolean;
    /**
     * Apply inactive visual appearance to the checkbox
     */
    disabled?: boolean;
    /**
     * Forward a ref to the underlying input element
     */
    ref?: React.RefObject<HTMLInputElement>;
    /**
     * Indicates whether the checkbox must be checked
     */
    required?: boolean;
    /**
     * Only used to inform ARIA attributes. Individual checkboxes do not have validation styles.
     */
    validationStatus?: FormValidationStatus;
    /**
     * A unique value that is never shown to the user.
     * Used during form submission and to identify which checkbox inputs are selected
     */
    value?: string;
} & Exclude<InputHTMLAttributes<HTMLInputElement>, 'value'> & BaseProps<HTMLInputElement>;
export declare const Checkbox: React.ForwardRefExoticComponent<Omit<{
    /**
     * Apply indeterminate visual appearance to the checkbox
     */
    indeterminate?: boolean | undefined;
    /**
     * Apply inactive visual appearance to the checkbox
     */
    disabled?: boolean | undefined;
    /**
     * Forward a ref to the underlying input element
     */
    ref?: React.RefObject<HTMLInputElement> | undefined;
    /**
     * Indicates whether the checkbox must be checked
     */
    required?: boolean | undefined;
    /**
     * Only used to inform ARIA attributes. Individual checkboxes do not have validation styles.
     */
    validationStatus?: FormValidationStatus | undefined;
    /**
     * A unique value that is never shown to the user.
     * Used during form submission and to identify which checkbox inputs are selected
     */
    value?: string | undefined;
} & React.InputHTMLAttributes<HTMLInputElement> & BaseProps<HTMLInputElement>, "ref"> & React.RefAttributes<unknown>>;
