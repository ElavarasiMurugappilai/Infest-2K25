import React from 'react';
import { RiverProps } from '../River';
type RiverBreakoutProps = Omit<RiverProps, 'align' | 'imageTextRatio'>;
export declare const RiverBreakout: React.ForwardRefExoticComponent<Omit<RiverBreakoutProps, "ref"> & React.RefAttributes<HTMLElement>> & {
    Visual: React.ForwardRefExoticComponent<Omit<import("../../component-helpers").BaseProps<HTMLDivElement> & React.HtmlHTMLAttributes<HTMLDivElement> & {
        fillMedia?: boolean | undefined;
        hasShadow?: boolean | undefined;
        rounded?: boolean | undefined;
    } & {
        children?: React.ReactNode;
    }, "ref"> & React.RefAttributes<HTMLDivElement>>;
    Content: React.ForwardRefExoticComponent<Omit<import("../../component-helpers").BaseProps<HTMLDivElement> & {
        trailingComponent?: React.FunctionComponent<{}> | undefined;
        trailingComponentDivider?: boolean | undefined;
        leadingComponent?: React.FunctionComponent<{}> | undefined;
        children: React.ReactElement<import("../..").TextProps, string | React.JSXElementConstructor<any>> | React.ReactElement<import("../../Heading").HeadingProps | import("../..").TextProps | import("../..").LinkProps, string | React.JSXElementConstructor<any>>[];
    } & React.HTMLAttributes<HTMLDivElement>, "ref"> & React.RefAttributes<HTMLDivElement>>;
    A11yHeading: ({ as, children }: React.PropsWithChildren<{
        as?: "h2" | "h3" | undefined;
    }>) => JSX.Element;
};
export {};
